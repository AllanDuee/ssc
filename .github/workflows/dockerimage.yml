# This is a basic workflow to help you get started with Actions
name: Docker Image CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
 # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
         
    - name: Build and push Docker images
      uses: docker/build-push-action@v1.0.1
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: ${{ secrets.DOCKER_USERNAME }}
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.DOCKER_PASSWORD }}
        # Server address of Docker registry. If not set then will default to Docker Hub
        # registry: # optional
        # Docker repository to tag the image with
        repository: ${{ secrets.DOCKER_USERNAME }}/ssc
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: v1
        # Automatically tags the built image with the git reference as per the readme
        # tag_with_ref: # optional
        # Automatically tags the built image with the git short SHA as per the readme
        tag_with_sha: true
        # Path to the build context
        # path: # optional, default is .
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        dockerfile: CloudAwarenessLab/Dockerfile
    - name: deploy-to-aws
      run: |
        aws configure set default.region us-east-1
        aws configure set default.output json
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set aws_session_token ${{ secrets.AWS_SESSION_TOKEN }}
        aws cloudformation deploy --template-file CloudAwarenessLab/cloudformation.yaml --stack-name allandueeGitHub-stack --no-fail-on-empty-changeset 
        aws cloudformation deploy --template-file CloudAwarenessLab/ecs-task.yaml --stack-name ecs-task --parameter-overrides ImageName=docker.io/allanduee/ssc:sha-$(git rev-parse --short HEAD) --no-fail-on-empty-changeset
